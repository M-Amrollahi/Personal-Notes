https://matthew-brett.github.io/curious-git/curious_git.html

The most commonly used Git commands are:
   add        Add file contents to the index
   bisect     Find by binary search the change that introduced a bug
   branch     List, create, or delete branches
   checkout   Checkout a branch or paths to the working tree
   clone      Clone a repository into a new directory
   commit     Record changes to the repository
   diff       Show changes between commits, commit and working tree, etc
   fetch      Download objects and refs from another repository
   grep       Print lines matching a pattern
   init       Create an empty Git repository or reinitialize an existing one
   log        Show commit logs
   merge      Join two or more development histories together
   mv         Move or rename a file, a directory, or a symlink
   pull       Fetch from and integrate with another repository or a local branch
   push       Update remote refs along with associated objects
   rebase     Forward-port local commits to the updated upstream head
   reset      Reset current HEAD to the specified state
   rm         Remove files from the working tree and from the index
   show       Show various types of objects
   status     Show the working tree status
   tag        Create, list, delete or verify a tag object signed with GPG
   
----------------------------------------------------------------------------------------

git log --graph --pretty=format:'%Cred%h%Creset%n' --abbrev-commit --date=relative --branches --all
#show the graph of the commit

* 0bcaee0
| 
* 9c10c1b
|   
*   cdbfd29
|\  
| | 
| * 9871100
| |   
| | * 828b23c
| |/  
|/|   
| | 
* | 71c5739
|/  
| 
* 07e804e
| 
* 243ab3e
| 
* 40efd50
----------------------------------------------------------------------------------------
git log --all --color --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit
#another way to show the graph

* 0bcaee0 - (HEAD -> master) new commitment (4 hours ago) <>
* 9c10c1b - (br1) chnage branch after sdd (3 days ago) <>
*   cdbfd29 - (origin/master) test1856 (4 days ago) <>
|\  
| * 9871100 - Create README.md (4 days ago) <>
| | * 828b23c - (origin/test_branch) branch added (4 days ago) <>
| |/  
|/|   
* | 71c5739 - test commit (4 days ago) <>
|/  
* 07e804e - test (4 days ago) <>
* 243ab3e - Update ssss.txt (4 days ago) <>
* 40efd50 - Create ssss.txt (4 days ago) <>
----------------------------------------------------------------------------------------

git hash-object ***

#get the hash of the file 
----------------------------------------------------------------------------------------
git ls-tree HEAD
#get the list of files with hashes
----------------------------------------------------------------------------------------
git cat-file blob af5626b
Hello, world!
#show the file content

----------------------------------------------------------------------------------------
https://shafiul.github.io/gitbook/1_the_git_object_model.html

The Git Objects
Every object consists of three things - a type, a size and content. The size is simply the size of the contents, the contents depend on what type of object it is, and there are four different types of objects: "blob", "tree", "commit", and "tag".

-A "blob" is used to store file data - it is generally a file.
-A "tree" is basically like a directory - it references a bunch of other trees and/or blobs (i.e. files and sub-directories)
-A "commit" points to a single tree, marking it as what the project looked like at a certain point in time. It contains meta-information about that point in time, such as a timestamp, the author of the changes since the last commit, a pointer to the previous commit(s), etc.
-A "tag" is a way to mark a specific commit as special in some way. It is normally used to tag certain commits as specific releases or something along those lines.

$git show 6ff87c4664
#show content of the blob

$git show -s --pretty=raw 2be7fcb476
commit 2be7fcb4764f2dbcee52635b91fedb1b3dcf7ab4
tree fb3a8bdd0ceddd019615af4d57a53f43d8cee2bf
parent 257a84d9d02e90447b149af58b271c19405edb6a
author Dave Watson <dwatson@mimvista.com> 1187576872 -0400
committer Junio C Hamano <gitster@pobox.com> 1187591163 -0700
----------------------------------------------------------------------------------------

--local (folder)
--global (user)
--system (system)
git config --list

git config --global user.name "AAA"


Working Tree / Working Directory
Staging / Index
Repository

Track , Untracked files

#move from staged to unstaged
git restore --staged <filename>
git rm --cached <filename>

(root-commit) ab0a279

git add index.txt --patch

git log --oneline

git show <commit>

git add --interactive <file>

#restore to last position
git restore <filename>

#restore all files to last commit
git restore .

#restore the file to commit id
git restore --source 27hq6251 index.txt

#go back 2 step commit (do not remove the rest commits)
git reset HEAD~2


git config --list --system 
git config --list --global
git config --list --local
